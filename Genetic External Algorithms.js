function newPop(a){var c=[];champion=population[findBest(population)];champion.state=1;c.push(champion);for(var b=1;b<a;b++){c[b]=selectReject(population,sum)}return c}function selectReject(m,n){var l=0;var h=0;var g=null;var a=new Player();while(l>=h){g=m[Math.floor((Math.random()*m.length))];h=g.fitness;l=Math.random()*n}l=0;h=0;var f=null;while(l>=h){f=m[Math.floor((Math.random()*m.length))];h=f.fitness;l=Math.random()*n}var b=matrixZeros(hiddenNodes,inputNodes);var k=matrixZeros(outputNodes,hiddenNodes);var e=0;for(var d=0;d<b.length;d++){for(var c=0;c<b[0].length;c++){if(Math.random()>0.5){b[d][c]=g.input_hidden[d][c]}else{b[d][c]=f.input_hidden[d][c]}}}for(var d=0;d<k.length;d++){for(var c=0;c<k[0].length;c++){if(Math.random()>0.5){k[d][c]=g.hidden_output[d][c]}else{k[d][c]=f.hidden_output[d][c]}}}if(Math.random()>0.5){e=g.bias}else{e=f.bias}a.input_hidden=mutate(b);a.hidden_output=mutate(k);a.bias=mutate(e);return a}function mutate(a){var d=a;if(d.length){for(var c=0;c<d.length;c++){for(var b=0;b<d[0].length;b++){if(Math.random()<mutateRate){d[c][b]=Math.random()*2-1}}}}else{if(Math.random()<mutateRate){d=Math.random()*2-1}}return d}function findBest(a){var d=0;var b=0;for(var c=0;c<a.length;c++){if(a[c].fitness>d){d=a[c].fitness;b=c}}return b};
